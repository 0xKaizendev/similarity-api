
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb" 
    url = env("MONGO_URL")
    relationMode = "prisma"
}

model Account {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId         String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?  
    access_token       String?  
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?  
    session_state      String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    apiKey        ApiKey[]
    apiKeyId String ?
}

model ApiKey {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    key String @unique
    enabled Boolean @default(true)
    User User @relation(fields: [userId], references: [id])
    userId String 

    request ApiRequest[]

    @@unique([userId, key, enabled])
}

model ApiRequest {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    timestamp DateTime @default(now()) 
    method String 
    path String 
    status Int
    duration Int 
    usedApiKey String 
    ApiKey ApiKey @relation(fields: [apiKeyId], references: [id])
    apiKeyId String

    @@index([apiKeyId , timestamp])
}

model VerificationToken {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}